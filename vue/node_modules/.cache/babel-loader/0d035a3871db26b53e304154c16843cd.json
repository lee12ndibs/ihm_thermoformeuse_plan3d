{"remainingRequest":"/media/lee12/Data/cours/Sup'Galilée/Niveau II/Projet/Thermoformeuse/vue/node_modules/babel-loader/lib/index.js!/media/lee12/Data/cours/Sup'Galilée/Niveau II/Projet/Thermoformeuse/vue/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/media/lee12/Data/cours/Sup'Galilée/Niveau II/Projet/Thermoformeuse/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/lee12/Data/cours/Sup'Galilée/Niveau II/Projet/Thermoformeuse/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/lee12/Data/cours/Sup'Galilée/Niveau II/Projet/Thermoformeuse/vue/src/components/Graphe.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/lee12/Data/cours/Sup'Galilée/Niveau II/Projet/Thermoformeuse/vue/src/components/Graphe.vue","mtime":1584212624221},{"path":"/media/lee12/Data/cours/Sup'Galilée/Niveau II/Projet/Thermoformeuse/vue/node_modules/cache-loader/dist/cjs.js","mtime":1583847268784},{"path":"/media/lee12/Data/cours/Sup'Galilée/Niveau II/Projet/Thermoformeuse/vue/node_modules/babel-loader/lib/index.js","mtime":1583847268349},{"path":"/media/lee12/Data/cours/Sup'Galilée/Niveau II/Projet/Thermoformeuse/vue/node_modules/vuetify-loader/lib/loader.js","mtime":1583847286507},{"path":"/media/lee12/Data/cours/Sup'Galilée/Niveau II/Projet/Thermoformeuse/vue/node_modules/cache-loader/dist/cjs.js","mtime":1583847268784},{"path":"/media/lee12/Data/cours/Sup'Galilée/Niveau II/Projet/Thermoformeuse/vue/node_modules/vue-loader/lib/index.js","mtime":1583847286091}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7Ci8vCi8vCi8vCi8vCi8vCmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICd2dWUtbGluZS1jaGFydCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IFszMDAsIDEwOCwgMjgwLCAxNzAsIDIzMCwgMjQyXSwKICAgICAgdGltZXI6IHVuZGVmaW5lZCwKICAgICAgbmJfem9uZXM6IHVuZGVmaW5lZCwKICAgICAgdGVtcF9zZXVpbHM6IFsyMDAsIDIwMCwgMjAwLCAyMDAsIDIwMCwgMjAwXSwKICAgICAgbWFyZ2VYOiAzMCwKICAgICAgbWFyZ2VZOiAyMCwKICAgICAgTGFyZ2V1cl9ncmFwaGU6IHVuZGVmaW5lZCwKICAgICAgSGF1dGV1cl9ncmFwaGU6IHVuZGVmaW5lZCwKICAgICAgRXNwYWNlbWVudF9iYXJyZXM6IDEwLAogICAgICBMYXJnZXVyX2JhcnJlczogdW5kZWZpbmVkLAogICAgICB0YWJfem9uZXM6IFsiWjEiLCAiWjIiLCAiWjMiLCAiWjQiLCAiWjUiLCAiWjYiXSAvLyBsaW5lOiAnJywKCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMubmJfem9uZXMgPSB0aGlzLmRhdGEubGVuZ3RoOwogICAgdGhpcy5MYXJnZXVyX2dyYXBoZSA9IHRoaXMubmJfem9uZXMgKiAxMDAgKyB0aGlzLm1hcmdlWDsKICAgIHRoaXMuSGF1dGV1cl9ncmFwaGUgPSBkMy5tYXgodGhpcy50ZW1wX3NldWlscykgKyAxMDA7CiAgICB0aGlzLkxhcmdldXJfYmFycmVzID0gdGhpcy5MYXJnZXVyX2dyYXBoZSAvIHRoaXMubmJfem9uZXM7IC8vIHRoaXMudGFiX3pvbmVzID0gdGhpcy5jcmVlcl90YWJfem9uZXMoKTsKCiAgICB0aGlzLmRlc3NpbmVyX2hpc3RvZ3JhbW1lKCk7CiAgICB0aGlzLnRpbWVyID0gc2V0SW50ZXJ2YWwodGhpcy5jaGFuZ2VEYXRhLCAxMDAwKTsKICB9LAogIGRlc3Ryb3llZDogZnVuY3Rpb24gZGVzdHJveWVkKCkgewogICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVyKTsKICB9LAogIHdhdGNoOiB7CiAgICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgICAvLyBjb25zb2xlLmxvZygnYScpOwogICAgICAvLyB0aGlzLmNyZWF0ZUdyYXBoKCk7CiAgICAgIHRoaXMudXBkYXRlKCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBjaGFuZ2VEYXRhOiBmdW5jdGlvbiBjaGFuZ2VEYXRhKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGRhdGFfdG9fc2VuZCA9IFsiZ2V0X3RlbXBlcmF0dXJlIl07CiAgICAgIHZhciBoZWFkZXJzID0gewogICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nOiAnKicsCiAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnOiAnUE9TVCwgR0VULCBQVVQsIE9QVElPTlMsIERFTEVURScsCiAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMnOiAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kcywgQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luLCBPcmlnaW4sIEFjY2VwdCwgQ29udGVudC1UeXBlJywKICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgfTsKICAgICAgZmV0Y2goImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMCIsIHsKICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICBoZWFkZXJzOiBoZWFkZXJzLAogICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGFfdG9fc2VuZCkKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBfdGhpcy5kYXRhID0gZGF0YVsxXS56b25lX2NoYXVmZmU7CiAgICAgIH0pOwogICAgfSwKICAgIGRlc3NpbmVyX2hpc3RvZ3JhbW1lOiBmdW5jdGlvbiBkZXNzaW5lcl9oaXN0b2dyYW1tZSgpIHsKICAgICAgdmFyIG5iX3pvbmVzID0gdGhpcy5kYXRhLmxlbmd0aDsKICAgICAgdmFyIG1hcmdlWCA9IHRoaXMubWFyZ2VYOwogICAgICB2YXIgbWFyZ2VZID0gdGhpcy5tYXJnZVk7CiAgICAgIHZhciBMYXJnZXVyX2dyYXBoZSA9IG5iX3pvbmVzICogdGhpcy5MYXJnZXVyX2JhcnJlcyArIG1hcmdlWDsKICAgICAgdmFyIEhhdXRldXJfZ3JhcGhlID0gZDMubWF4KHRoaXMudGVtcF9zZXVpbHMpICogMS41ICsgbWFyZ2VZOwogICAgICB2YXIgRXNwYWNlbWVudF9iYXJyZXMgPSB0aGlzLkVzcGFjZW1lbnRfYmFycmVzOwogICAgICB2YXIgTGFyZ2V1cl9iYXJyZXMgPSBMYXJnZXVyX2dyYXBoZSAvIG5iX3pvbmVzOwogICAgICB2YXIgdGFiX3pvbmVzID0gdGhpcy50YWJfem9uZXM7CiAgICAgIHZhciBBeGVZID0gZDMuc2NhbGVMaW5lYXIoKS5kb21haW4oW0hhdXRldXJfZ3JhcGhlLCAwXSkucmFuZ2UoWzAsIEhhdXRldXJfZ3JhcGhlXSk7CiAgICAgIHZhciBBeGVYID0gZDMuc2NhbGVCYW5kKCkuZG9tYWluKHRhYl96b25lcykucmFuZ2UoWzAsIExhcmdldXJfZ3JhcGhlXSk7CiAgICAgIHZhciBzdmcgPSBkMy5zZWxlY3QoJyNoaXN0b2dyYW1tZV90ZW1wJykuYXR0cigid2lkdGgiLCBMYXJnZXVyX2dyYXBoZSArIG1hcmdlWCkuYXR0cigiaGVpZ2h0IiwgSGF1dGV1cl9ncmFwaGUpOwogICAgICB2YXIgdGVtcF9vayA9IHRoaXMudGVtcF9ibGV1ZXMoKTsKICAgICAgdmFyIHRlbXBfcGFzX29rID0gdGhpcy50ZW1wX3JvdWdlcygpOwogICAgICBzdmcuYXBwZW5kKCJnIikuYXR0cigidHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgiICsgbWFyZ2VYICsgIiwiICsgLW1hcmdlWSArICIpIikuY2FsbChkMy5heGlzTGVmdChBeGVZKSk7CiAgICAgIHN2Zy5hcHBlbmQoImciKS5hdHRyKCJ0cmFuc2Zvcm0iLCAidHJhbnNsYXRlKCIgKyBtYXJnZVggKyAiLCIgKyAoSGF1dGV1cl9ncmFwaGUgLSBtYXJnZVkpICsgIikiKS5jYWxsKGQzLmF4aXNCb3R0b20oQXhlWCkpOwogICAgICBzdmcuc2VsZWN0QWxsKCJncmFwaGVfcm91Z2UiKS5kYXRhKHRlbXBfcGFzX29rKS5lbnRlcigpLmFwcGVuZCgicmVjdCIpLmF0dHIoImZpbGwiLCAicmVkIikuYXR0cigieSIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIEhhdXRldXJfZ3JhcGhlIC0gZDsKICAgICAgfSkuYXR0cigieCIsIGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gRXNwYWNlbWVudF9iYXJyZXM7CiAgICAgIH0pLmF0dHIoImhlaWdodCIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQ7CiAgICAgIH0pLmF0dHIoIndpZHRoIiwgTGFyZ2V1cl9iYXJyZXMgLSBFc3BhY2VtZW50X2JhcnJlcykuYXR0cigidHJhbnNmb3JtIiwgZnVuY3Rpb24gKGQsIGkpIHsKICAgICAgICB2YXIgdHJhbnNsYXRlID0gW0xhcmdldXJfYmFycmVzICogaSArIG1hcmdlWCwgLW1hcmdlWV07CiAgICAgICAgcmV0dXJuICJ0cmFuc2xhdGUoIiArIHRyYW5zbGF0ZSArICIpIjsKICAgICAgfSk7CiAgICAgIHN2Zy5zZWxlY3RBbGwoImdyYXBoZV9ibGV1IikuZGF0YSh0ZW1wX29rKS5lbnRlcigpLmFwcGVuZCgicmVjdCIpLmF0dHIoImZpbGwiLCAic3RlZWxibHVlIikuYXR0cigieSIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIEhhdXRldXJfZ3JhcGhlIC0gZDsKICAgICAgfSkuYXR0cigieCIsIGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gRXNwYWNlbWVudF9iYXJyZXM7CiAgICAgIH0pLmF0dHIoImhlaWdodCIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQ7CiAgICAgIH0pLmF0dHIoIndpZHRoIiwgTGFyZ2V1cl9iYXJyZXMgLSBFc3BhY2VtZW50X2JhcnJlcykuYXR0cigidHJhbnNmb3JtIiwgZnVuY3Rpb24gKGQsIGkpIHsKICAgICAgICB2YXIgdHJhbnNsYXRlID0gW0xhcmdldXJfYmFycmVzICogaSArIG1hcmdlWCwgLW1hcmdlWV07CiAgICAgICAgcmV0dXJuICJ0cmFuc2xhdGUoIiArIHRyYW5zbGF0ZSArICIpIjsKICAgICAgfSk7CiAgICB9LAogICAgdGVtcF9ibGV1ZXM6IGZ1bmN0aW9uIHRlbXBfYmxldWVzKCkgewogICAgICB2YXIgdGFiID0gW107CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubmJfem9uZXM7IGkrKykgewogICAgICAgIGlmICh0aGlzLmRhdGFbaV0gPD0gdGhpcy50ZW1wX3NldWlsc1tpXSkgewogICAgICAgICAgdGFiLnB1c2godGhpcy5kYXRhW2ldKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGFiLnB1c2godGhpcy50ZW1wX3NldWlsc1tpXSk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gdGFiOwogICAgfSwKICAgIHRlbXBfcm91Z2VzOiBmdW5jdGlvbiB0ZW1wX3JvdWdlcygpIHsKICAgICAgdmFyIHRhYiA9IFtdOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm5iX3pvbmVzOyBpKyspIHsKICAgICAgICBpZiAodGhpcy5kYXRhW2ldID4gdGhpcy50ZW1wX3NldWlsc1tpXSkgewogICAgICAgICAgdGFiLnB1c2godGhpcy5kYXRhW2ldKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGFiLnB1c2goMCk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gdGFiOwogICAgfSwKICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkgewogICAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KCJzdmciKTsKICAgICAgc3ZnLnNlbGVjdEFsbCgiKiIpLnJlbW92ZSgpOwogICAgICB0aGlzLmRlc3NpbmVyX2hpc3RvZ3JhbW1lKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Graphe.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <svg id=\"histogramme_temp\">\n  </svg>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nexport default {\n  name: 'vue-line-chart',\n  data: () => ({\n      data: [300, 108, 280, 170, 230, 242],\n      timer: undefined,\n      nb_zones: undefined,\n      temp_seuils: [200, 200, 200, 200, 200, 200],\n      margeX: 30,\n      margeY: 20,\n      Largeur_graphe: undefined,\n      Hauteur_graphe: undefined,\n      Espacement_barres: 10,\n      Largeur_barres: undefined,\n      tab_zones: [\"Z1\", \"Z2\", \"Z3\", \"Z4\", \"Z5\", \"Z6\"],\n      // line: '',\n    }),\n  mounted() {\n    this.nb_zones = this.data.length;\n    this.Largeur_graphe = this.nb_zones*100 + this.margeX;\n    this.Hauteur_graphe = d3.max(this.temp_seuils) + 100;\n    this.Largeur_barres = this.Largeur_graphe/this.nb_zones;\n    // this.tab_zones = this.creer_tab_zones();\n    this.dessiner_histogramme();\n    this.timer = setInterval(this.changeData, 1000);\n  },\n  destroyed: function(){\n    clearInterval(this.timer);\n  },\n  watch:{\n    data: function(){\n      // console.log('a');\n      // this.createGraph();\n      this.update();\n    },\n  },\n  methods: {\n    changeData(){\n      \n      let data_to_send = [\"get_temperature\"];\n      let headers = {'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'POST, GET, PUT, OPTIONS, DELETE',\n            'Access-Control-Allow-Headers': 'Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type',\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n      fetch(\"http://localhost:3000\", {\n        method: 'post',\n        headers,\n        body: JSON.stringify(data_to_send)\n\n      })\n      .then(res=> res.json())\n      .then(data => {\n        this.data = data[1].zone_chauffe;\n      });\n\n\n    },\n    dessiner_histogramme(){\n      var nb_zones = this.data.length;\n      var margeX = this.margeX;\n      var margeY = this.margeY;\n      var Largeur_graphe = nb_zones*this.Largeur_barres + margeX;\n      var Hauteur_graphe = d3.max(this.temp_seuils)*1.5 + margeY;\n      var Espacement_barres = this.Espacement_barres;\n      var Largeur_barres = (Largeur_graphe / nb_zones);\n\n      var tab_zones = this.tab_zones;\n\n      var AxeY = d3.scaleLinear()\n          .domain([Hauteur_graphe,0])\n          .range([0,Hauteur_graphe])\n\n      var AxeX = d3.scaleBand()\n          .domain(tab_zones)\n          .range([0,Largeur_graphe])\n\n      var svg = d3.select('#histogramme_temp')\n          .attr(\"width\", Largeur_graphe+margeX)\n          .attr(\"height\", Hauteur_graphe);\n\n      var temp_ok = this.temp_bleues();\n      var temp_pas_ok = this.temp_rouges();\n\n      svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\"+margeX+\",\"+ -margeY +\")\")\n      .call(d3.axisLeft(AxeY));\n\n      svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\"+ margeX +\",\"+(Hauteur_graphe-margeY)+\")\")\n      .call(d3.axisBottom(AxeX));\n\n\n      svg.selectAll(\"graphe_rouge\")\n                  .data(temp_pas_ok)\n                  .enter()\n                  .append(\"rect\")\n                  .attr(\"fill\", \"red\")\n                  .attr(\"y\", function(d) {\n                      return Hauteur_graphe - d;\n                  })\n                  .attr(\"x\", function() {\n                      return Espacement_barres;\n                  })\n                  .attr(\"height\", function(d) {\n                      return d;\n                  })\n                  .attr(\"width\", Largeur_barres - Espacement_barres)\n                  .attr(\"transform\", function (d, i) {\n                      var translate = [(Largeur_barres * i) + margeX, -margeY];\n                      return \"translate(\"+ translate +\")\";\n                  });\n\n      svg.selectAll(\"graphe_bleu\")\n                  .data(temp_ok)\n                  .enter()\n                  .append(\"rect\")\n                  .attr(\"fill\", \"steelblue\")\n                  .attr(\"y\", function(d) {\n                      return Hauteur_graphe - d;\n                  })\n                  .attr(\"x\", function() {\n                      return Espacement_barres;\n                  })\n                  .attr(\"height\", function(d) {\n                      return d;\n                  })\n                  .attr(\"width\", Largeur_barres - Espacement_barres)\n                  .attr(\"transform\", function (d, i) {\n                      var translate = [(Largeur_barres * i) + margeX, -margeY];\n                      return \"translate(\"+ translate +\")\";\n                  });\n\n    },\n    temp_bleues(){\n    var tab = [];\n    for(var i = 0; i < this.nb_zones; i++){\n        if(this.data[i] <= this.temp_seuils[i]){\n            tab.push(this.data[i]);\n        }\n        else{\n            tab.push(this.temp_seuils[i]);\n        }\n    }\n    return tab;\n    },\n    temp_rouges(){\n      var tab = [];\n      for(var i = 0; i < this.nb_zones; i++){\n          if(this.data[i] > this.temp_seuils[i]){\n              tab.push(this.data[i]);\n          }\n          else{\n              tab.push(0);\n          }\n      }\n      return tab;\n    },\n    update(){\n      var svg = d3.select(\"svg\");\n      svg.selectAll(\"*\").remove();\n      this.dessiner_histogramme();\n    }\n  },\n};\n</script>\n\n<style scoped>\n  svg{\n    margin: 25px;\n  }\n  path{\n    fill: none;\n    stroke: #76BF8A;\n    stroke-width: 3px;\n  }\n</style>\n"],"sourceRoot":"src/components"}]}