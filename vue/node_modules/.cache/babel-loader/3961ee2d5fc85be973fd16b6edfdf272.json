{"remainingRequest":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/babel-loader/lib/index.js!/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/romain/Bureau/Projet/2/Thermoformeuse/vue/src/components/Main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/src/components/Main.vue","mtime":1584398344345},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/cache-loader/dist/cjs.js","mtime":1583847125793},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/babel-loader/lib/index.js","mtime":1583847125770},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/vuetify-loader/lib/loader.js","mtime":1583847126586},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/cache-loader/dist/cjs.js","mtime":1583847125793},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/vue-loader/lib/index.js","mtime":1583847126556}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBHcmFwaGUgZnJvbSAnLi9HcmFwaGUudnVlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdNYWluJywKICBjb21wb25lbnRzOiB7CiAgICBHcmFwaGU6IEdyYXBoZQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpbWVyOiB1bmRlZmluZWQsCiAgICAgIHN0YXR1dDogIkNvbmZpZ3VyYXRpb24gbm9uIGNoYXJnw6llIiwKICAgICAgY29uZmlndXJhdGlvbjogIkF1Y3VuZSIKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKHRoaXMuZ2V0X3N0YXR1dCwgMTAwMCk7CiAgICB0aGlzLmdldF9jb25maWd1cmF0aW9uKCk7CiAgfSwKICBkZXN0cm95ZWQ6IGZ1bmN0aW9uIGRlc3Ryb3llZCgpIHsKICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcik7CiAgfSwKICBtZXRob2RzOiB7CiAgICBzdGFydDogZnVuY3Rpb24gc3RhcnQoKSB7CiAgICAgIGlmICh0aGlzLnN0YXR1dCA9PT0gJ1Byw6p0JykgewogICAgICAgIHZhciBkYXRhX3RvX3NlbmQgPSBbInN0YXJ0Il07CiAgICAgICAgdmFyIGhlYWRlcnMgPSB7CiAgICAgICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJzogJyonLAogICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnOiAnUE9TVCwgR0VULCBQVVQsIE9QVElPTlMsIERFTEVURScsCiAgICAgICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycyc6ICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzLCBBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4sIE9yaWdpbiwgQWNjZXB0LCBDb250ZW50LVR5cGUnLAogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICB9OwogICAgICAgIGZldGNoKCJodHRwOi8vbG9jYWxob3N0OjMwMDAiLCB7CiAgICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICAgIGhlYWRlcnM6IGhlYWRlcnMsCiAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhX3RvX3NlbmQpCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTsKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShkYXRhKSk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBnZXRfc3RhdHV0OiBmdW5jdGlvbiBnZXRfc3RhdHV0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGRhdGFfdG9fc2VuZCA9IFsiZ2V0X3N0YXR1dCJdOwogICAgICB2YXIgaGVhZGVycyA9IHsKICAgICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJzogJyonLAogICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzJzogJ1BPU1QsIEdFVCwgUFVULCBPUFRJT05TLCBERUxFVEUnLAogICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzJzogJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMsIEFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbiwgT3JpZ2luLCBBY2NlcHQsIENvbnRlbnQtVHlwZScsCiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgIH07CiAgICAgIGZldGNoKCJodHRwOi8vbG9jYWxob3N0OjMwMDAiLCB7CiAgICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAgICAgaGVhZGVyczogaGVhZGVycywKICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhX3RvX3NlbmQpCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHJldHVybiByZXMuanNvbigpOwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgaWYgKGRhdGFbMV0uc3RhdHV0ID09IDEpIF90aGlzLnN0YXR1dCA9ICJFbiBjb3VycyI7ZWxzZSBpZiAoZGF0YVsxXS5zdGF0dXQgPT0gMikgewogICAgICAgICAgX3RoaXMuc3RhdHV0ID0gIkNvbmZpZ3VyYXRpb24gbm9uIGNoYXJnw6llIjsKICAgICAgICB9IGVsc2UgaWYgKGRhdGFbMV0uc3RhdHV0ID09IDMpIHsKICAgICAgICAgIF90aGlzLnN0YXR1dCA9ICJFbiBjaGF1ZmZlIjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMuc3RhdHV0ID0gIlByw6p0IjsKICAgICAgICB9IC8vIGNvbnNvbGUubG9nKHRoaXMuc3RhdHV0KTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0X2NvbmZpZ3VyYXRpb246IGZ1bmN0aW9uIGdldF9jb25maWd1cmF0aW9uKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBkYXRhX3RvX3NlbmQgPSBbImdldF9jb25maWd1cmF0aW9uX2NvdXJhbnRlIl07CiAgICAgIHZhciBoZWFkZXJzID0gewogICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nOiAnKicsCiAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnOiAnUE9TVCwgR0VULCBQVVQsIE9QVElPTlMsIERFTEVURScsCiAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMnOiAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kcywgQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luLCBPcmlnaW4sIEFjY2VwdCwgQ29udGVudC1UeXBlJywKICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgfTsKICAgICAgZmV0Y2goImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMCIsIHsKICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICBoZWFkZXJzOiBoZWFkZXJzLAogICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGFfdG9fc2VuZCkKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBpZiAoZGF0YVsxXSA9PT0gbnVsbCkgewogICAgICAgICAgX3RoaXMyLmNvbmZpZ3VyYXRpb24gPSAiQXVjdW5lIChWZXVpbGxleiBzw6lsZWN0aW9ubmV6IHVuZSBjb25maWd1cmF0aW9uKSI7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzMi5jb25maWd1cmF0aW9uID0gZGF0YVsxXS5ub207CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container text-center>\n    <v-row>\n      <v-col cols=\"3\">\n      </v-col>\n      <v-col cols=\"6\">\n        <v-card outlined>\n          <h1>{{configuration}}</h1>\n        </v-card>\n      </v-col>\n      <v-col cols=\"3\">\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col cols=\"1\">\n      </v-col>\n      <v-col cols=\"6\">\n        <Graphe/>\n      </v-col>\n      <v-col cols=\"2\">\n      </v-col>\n      <v-col cols=\"3\">\n        <v-btn dark x-large fab right color=\"green\" @click=\"start()\" style=\"margin-top:200px\">\n          <v-img v-if=\"statut==='Prêt'\"\n            :src=\"require('../assets/start.jpg')\"\n            contain\n            height=\"300\"\n          />\n          <v-img v-else\n            :src=\"require('../assets/start_inactive.jpg')\"\n            contain\n            height=\"300\"\n          />\n        </v-btn>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col cols=\"1\">\n      </v-col>\n      <v-col cols=\"6\">\n        <v-card v-if=\"statut === 'Prêt'\" outlined color=green>\n          <h1>{{statut}}</h1>\n        </v-card>\n        <v-card v-else-if=\"statut === 'Configuration non chargée'\" outlined color=red>\n          <h1>{{statut}}</h1>\n        </v-card>\n        <v-card v-else outlined color=orange>\n          <h1>{{statut}}</h1>\n        </v-card>\n      </v-col>\n      <v-col cols=\"3\">\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\n  import Graphe from './Graphe.vue'\n  export default {\n    name: 'Main',\n    components: {\n      Graphe,\n    },\n    data: () => ({\n      timer: undefined,\n      statut: \"Configuration non chargée\",\n      configuration: \"Aucune\",\n    }\n    ),\n    mounted() {\n      this.timer = setInterval(this.get_statut, 1000);\n      this.get_configuration();\n    },\n    destroyed: function(){\n      clearInterval(this.timer);\n    },\n    methods:{\n      start(){\n        if(this.statut === 'Prêt'){\n          let data_to_send = [\"start\"];\n          let headers = {'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'POST, GET, PUT, OPTIONS, DELETE',\n                'Access-Control-Allow-Headers': 'Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type',\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n              }\n          fetch(\"http://localhost:3000\", {\n            method: 'post',\n            headers,\n            body: JSON.stringify(data_to_send)\n\n          })\n          .then(res=> res.json())\n          .then(data => {\n            console.log(JSON.stringify(data));\n\n          });\n        }\n      },\n      get_statut(){\n        let data_to_send = [\"get_statut\"];\n        let headers = {'Access-Control-Allow-Origin': '*',\n              'Access-Control-Allow-Methods': 'POST, GET, PUT, OPTIONS, DELETE',\n              'Access-Control-Allow-Headers': 'Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type',\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n        fetch(\"http://localhost:3000\", {\n          method: 'post',\n          headers,\n          body: JSON.stringify(data_to_send)\n        })\n        .then(res=> res.json())\n        .then(data => {\n          if(data[1].statut == 1)\n            this.statut = \"En cours\";\n          else if (data[1].statut == 2) {\n            this.statut = \"Configuration non chargée\";\n          }\n          else if (data[1].statut == 3){\n            this.statut = \"En chauffe\"\n          }\n          else{\n            this.statut = \"Prêt\";\n          }\n          // console.log(this.statut);\n        });\n      },\n      get_configuration(){\n        let data_to_send = [\"get_configuration_courante\"];\n        let headers = {'Access-Control-Allow-Origin': '*',\n              'Access-Control-Allow-Methods': 'POST, GET, PUT, OPTIONS, DELETE',\n              'Access-Control-Allow-Headers': 'Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type',\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n        fetch(\"http://localhost:3000\", {\n          method: 'post',\n          headers,\n          body: JSON.stringify(data_to_send)\n        })\n        .then(res=> res.json())\n        .then(data => {\n          if(data[1] === null){\n            this.configuration = \"Aucune (Veuillez sélectionnez une configuration)\";\n          }\n          else{\n            this.configuration = data[1].nom;\n          }\n        });\n      }\n    }\n  }\n</script>\n"],"sourceRoot":"src/components"}]}