{"remainingRequest":"/home/jocelyn/Documents/Projettest/Projetv2/Thermoformeuse/vue/node_modules/thread-loader/dist/cjs.js!/home/jocelyn/Documents/Projettest/Projetv2/Thermoformeuse/vue/node_modules/babel-loader/lib/index.js!/home/jocelyn/Documents/Projettest/Projetv2/Thermoformeuse/vue/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/jocelyn/Documents/Projettest/Projetv2/Thermoformeuse/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jocelyn/Documents/Projettest/Projetv2/Thermoformeuse/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jocelyn/Documents/Projettest/Projetv2/Thermoformeuse/vue/src/components/Graphe.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jocelyn/Documents/Projettest/Projetv2/Thermoformeuse/vue/src/components/Graphe.vue","mtime":1583845381502},{"path":"/home/jocelyn/Documents/Projettest/Projetv2/Thermoformeuse/vue/node_modules/cache-loader/dist/cjs.js","mtime":1583835485378},{"path":"/home/jocelyn/Documents/Projettest/Projetv2/Thermoformeuse/vue/node_modules/thread-loader/dist/cjs.js","mtime":1583835488766},{"path":"/home/jocelyn/Documents/Projettest/Projetv2/Thermoformeuse/vue/node_modules/babel-loader/lib/index.js","mtime":1583835485310},{"path":"/home/jocelyn/Documents/Projettest/Projetv2/Thermoformeuse/vue/node_modules/vuetify-loader/lib/loader.js","mtime":1583835489018},{"path":"/home/jocelyn/Documents/Projettest/Projetv2/Thermoformeuse/vue/node_modules/cache-loader/dist/cjs.js","mtime":1583835485378},{"path":"/home/jocelyn/Documents/Projettest/Projetv2/Thermoformeuse/vue/node_modules/vue-loader/lib/index.js","mtime":1583835488874}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7Ci8vCi8vCi8vCi8vCi8vCmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICd2dWUtbGluZS1jaGFydCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IFszMDAsIDEwOCwgMjgwLCAxNzAsIDIzMCwgMjQyXSwKICAgICAgdGltZXI6IHVuZGVmaW5lZCwKICAgICAgbmJfem9uZXM6IHVuZGVmaW5lZCwKICAgICAgdGVtcF9zZXVpbHM6IFszMDAsIDIwMCwgMzAwLCAzMDAsIDMwMCwgMjUwXSwKICAgICAgbWFyZ2VYOiAzMCwKICAgICAgbWFyZ2VZOiAyMCwKICAgICAgTGFyZ2V1cl9ncmFwaGU6IHVuZGVmaW5lZCwKICAgICAgSGF1dGV1cl9ncmFwaGU6IHVuZGVmaW5lZCwKICAgICAgRXNwYWNlbWVudF9iYXJyZXM6IDEwLAogICAgICBMYXJnZXVyX2JhcnJlczogdW5kZWZpbmVkLAogICAgICB0YWJfem9uZXM6IHVuZGVmaW5lZCwKICAgICAgQXhlWDogdW5kZWZpbmVkLAogICAgICBBeGVZOiB1bmRlZmluZWQsCiAgICAgIHN2ZzogdW5kZWZpbmVkLAogICAgICB0ZW1wX29rOiB1bmRlZmluZWQsCiAgICAgIHRlbXBfcGFzX29rOiB1bmRlZmluZWQgLy8gbGluZTogJycsCgogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLm5iX3pvbmVzID0gdGhpcy5kYXRhLmxlbmd0aDsKICAgIHRoaXMuTGFyZ2V1cl9ncmFwaGUgPSB0aGlzLm5iX3pvbmVzICogMTAwICsgdGhpcy5tYXJnZVg7CiAgICB0aGlzLkhhdXRldXJfZ3JhcGhlID0gZDMubWF4KHRoaXMudGVtcF9zZXVpbHMpICsgMTAwOyAvLyBjb25zb2xlLmxvZygiYSIpOwoKICAgIHRoaXMuTGFyZ2V1cl9iYXJyZXMgPSB0aGlzLkxhcmdldXJfZ3JhcGhlIC8gdGhpcy5uYl96b25lczsKICAgIHRoaXMudGFiX3pvbmVzID0gdGhpcy5jcmVlcl90YWJfem9uZXMoKTsKICAgIHRoaXMuY3JlYXRlR3JhcGgoKTsKICAgIHRoaXMudGltZXIgPSBzZXRJbnRlcnZhbCh0aGlzLmNoYW5nZURhdGEsIDEwMDApOwogIH0sCiAgZGVzdHJveWVkOiBmdW5jdGlvbiBkZXN0cm95ZWQoKSB7CiAgICBjbGVhckludGVydmFsKHRoaXMudGltZXIpOwogIH0sCiAgd2F0Y2g6IHsKICAgIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7Ly8gY29uc29sZS5sb2coJ2EnKTsKICAgICAgLy8gdGhpcy5jcmVhdGVHcmFwaCgpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgY2hhbmdlRGF0YTogZnVuY3Rpb24gY2hhbmdlRGF0YSgpIHsKICAgICAgLy8gY29uc29sZS5sb2coIm9rIik7CiAgICAgIC8vIGZvciAobGV0IGkgPSAwOyBpPHRoaXMuZGF0YS5sZW5ndGg7IGkrKyl7CiAgICAgIC8vICAgdGhpcy5kYXRhW2ldID0gTWF0aC5mbG9vcigoTWF0aC5yYW5kb20oKSAqIDEwMCkgKyAxMDApOwogICAgICAvLyB9CiAgICAgIHZhciBkYXRhX3RvX3NlbmQgPSB7CiAgICAgICAgInR5cGUiOiAiZ2V0IgogICAgICB9OwogICAgICB2YXIgaGVhZGVycyA9IHsKICAgICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJzogJyonLAogICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzJzogJ1BPU1QsIEdFVCwgUFVULCBPUFRJT05TLCBERUxFVEUnLAogICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzJzogJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMsIEFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbiwgT3JpZ2luLCBBY2NlcHQsIENvbnRlbnQtVHlwZScsCiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgIH07CiAgICAgIGZldGNoKCJodHRwOi8vbG9jYWxob3N0OjMwMDAvdGVtcGVyYXR1cmUiLCB7CiAgICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAgICAgaGVhZGVyczogaGVhZGVycywKICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhX3RvX3NlbmQpCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHJldHVybiByZXMuanNvbigpOwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkoZGF0YSkpOwogICAgICB9KTsKICAgIH0sCiAgICBjcmVlcl90YWJfem9uZXM6IGZ1bmN0aW9uIGNyZWVyX3RhYl96b25lcygpIHsKICAgICAgdmFyIHRhYiA9IFtdOwoKICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPD0gdGhpcy5uYl96b25lczsgaSsrKSB7CiAgICAgICAgdGFiLnB1c2goInpvbmUgIiArIGkpOwogICAgICB9CgogICAgICByZXR1cm4gdGFiOwogICAgfSwKICAgIGNyZWF0ZUdyYXBoOiBmdW5jdGlvbiBjcmVhdGVHcmFwaCgpIHsKICAgICAgdmFyIHN2ZyA9IHRoaXMuc3ZnOwogICAgICB2YXIgTGFyZ2V1cl9iYXJyZXMgPSB0aGlzLkxhcmdldXJfYmFycmVzOwogICAgICB2YXIgTGFyZ2V1cl9ncmFwaGUgPSB0aGlzLkxhcmdldXJfZ3JhcGhlOwogICAgICB2YXIgbWFyZ2VYID0gdGhpcy5tYXJnZVg7CiAgICAgIHZhciBIYXV0ZXVyX2dyYXBoZSA9IHRoaXMuSGF1dGV1cl9ncmFwaGU7CiAgICAgIHZhciBtYXJnZVkgPSB0aGlzLm1hcmdlWTsKICAgICAgdmFyIEF4ZVggPSB0aGlzLkF4ZVg7CiAgICAgIHZhciBBeGVZID0gdGhpcy5BeGVZOwogICAgICB2YXIgRXNwYWNlbWVudF9iYXJyZXMgPSB0aGlzLkVzcGFjZW1lbnRfYmFycmVzOwogICAgICBBeGVZID0gZDMuc2NhbGVMaW5lYXIoKS5kb21haW4oW0hhdXRldXJfZ3JhcGhlLCAwXSkucmFuZ2UoWzAsIEhhdXRldXJfZ3JhcGhlXSk7CiAgICAgIEF4ZVggPSBkMy5zY2FsZUJhbmQoKS5kb21haW4odGhpcy50YWJfem9uZXMpLnJhbmdlKFswLCBMYXJnZXVyX2dyYXBoZV0pOwogICAgICBzdmcgPSBkMy5zZWxlY3QoJ3N2ZycpLmF0dHIoIndpZHRoIiwgTGFyZ2V1cl9ncmFwaGUgKyBtYXJnZVgpLmF0dHIoImhlaWdodCIsIEhhdXRldXJfZ3JhcGhlKTsKICAgICAgdGhpcy50ZW1wX29rID0gdGhpcy50ZW1wX2JsZXVlcygpOwogICAgICB0aGlzLnRlbXBfcGFzX29rID0gdGhpcy50ZW1wX3JvdWdlcygpOwogICAgICBzdmcuYXBwZW5kKCJnIikuYXR0cigidHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgiICsgbWFyZ2VYICsgIiwiICsgLW1hcmdlWSArICIpIikuY2FsbChkMy5heGlzTGVmdChBeGVZKSk7CiAgICAgIHN2Zy5hcHBlbmQoImciKS5hdHRyKCJ0cmFuc2Zvcm0iLCAidHJhbnNsYXRlKCIgKyBtYXJnZVggKyAiLCIgKyAoSGF1dGV1cl9ncmFwaGUgLSBtYXJnZVkpICsgIikiKS5jYWxsKGQzLmF4aXNCb3R0b20oQXhlWCkpOwogICAgICBzdmcuc2VsZWN0QWxsKCJyZWN0IikuZGF0YSh0aGlzLnRlbXBfcGFzX29rKS5lbnRlcigpLmFwcGVuZCgicmVjdCIpLmF0dHIoImZpbGwiLCAicmVkIikuYXR0cigieSIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIEhhdXRldXJfZ3JhcGhlIC0gZDsKICAgICAgfSkuYXR0cigieCIsIGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gRXNwYWNlbWVudF9iYXJyZXM7CiAgICAgIH0pLmF0dHIoImhlaWdodCIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQ7CiAgICAgIH0pLmF0dHIoIndpZHRoIiwgTGFyZ2V1cl9iYXJyZXMgLSBFc3BhY2VtZW50X2JhcnJlcykuYXR0cigidHJhbnNmb3JtIiwgZnVuY3Rpb24gKGQsIGkpIHsKICAgICAgICB2YXIgdHJhbnNsYXRlID0gW0xhcmdldXJfYmFycmVzICogaSArIG1hcmdlWCwgLW1hcmdlWV07CiAgICAgICAgcmV0dXJuICJ0cmFuc2xhdGUoIiArIHRyYW5zbGF0ZSArICIpIjsKICAgICAgfSk7IC8vIGNvbnNvbGUubG9nKHRoaXMudGVtcF9vayk7CgogICAgICBzdmcuc2VsZWN0QWxsKCJncmFwaGVfcm91Z2UiKS5kYXRhKHRoaXMudGVtcF9vaykuZW50ZXIoKS5hcHBlbmQoInJlY3QiKS5hdHRyKCJmaWxsIiwgInN0ZWVsYmx1ZSIpLmF0dHIoInkiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBIYXV0ZXVyX2dyYXBoZSAtIGQ7CiAgICAgIH0pLmF0dHIoIngiLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIEVzcGFjZW1lbnRfYmFycmVzOwogICAgICB9KS5hdHRyKCJoZWlnaHQiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkOwogICAgICB9KS5hdHRyKCJ3aWR0aCIsIExhcmdldXJfYmFycmVzIC0gRXNwYWNlbWVudF9iYXJyZXMpLmF0dHIoInRyYW5zZm9ybSIsIGZ1bmN0aW9uIChkLCBpKSB7CiAgICAgICAgdmFyIHRyYW5zbGF0ZSA9IFtMYXJnZXVyX2JhcnJlcyAqIGkgKyBtYXJnZVgsIC1tYXJnZVldOwogICAgICAgIHJldHVybiAidHJhbnNsYXRlKCIgKyB0cmFuc2xhdGUgKyAiKSI7CiAgICAgIH0pOwogICAgfSwKICAgIHRlbXBfYmxldWVzOiBmdW5jdGlvbiB0ZW1wX2JsZXVlcygpIHsKICAgICAgdmFyIHRhYiA9IFtdOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm5iX3pvbmVzOyBpKyspIHsKICAgICAgICBpZiAodGhpcy5kYXRhW2ldIDw9IHRoaXMudGVtcF9zZXVpbHNbaV0pIHsKICAgICAgICAgIHRhYi5wdXNoKHRoaXMuZGF0YVtpXSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRhYi5wdXNoKHRoaXMudGVtcF9zZXVpbHNbaV0pOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHRhYjsKICAgIH0sCiAgICB0ZW1wX3JvdWdlczogZnVuY3Rpb24gdGVtcF9yb3VnZXMoKSB7CiAgICAgIHZhciB0YWIgPSBbXTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5uYl96b25lczsgaSsrKSB7CiAgICAgICAgaWYgKHRoaXMuZGF0YVtpXSA+IHRoaXMudGVtcF9zZXVpbHNbaV0pIHsKICAgICAgICAgIHRhYi5wdXNoKHRoaXMuZGF0YVtpXSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRhYi5wdXNoKDApOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHRhYjsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Graphe.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <svg>\n  </svg>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nexport default {\n  name: 'vue-line-chart',\n  data: () => ({\n      data: [300, 108, 280, 170, 230, 242],\n      timer: undefined,\n      nb_zones: undefined,\n      temp_seuils: [300, 200, 300, 300, 300, 250],\n      margeX: 30,\n      margeY: 20,\n      Largeur_graphe: undefined,\n      Hauteur_graphe: undefined,\n      Espacement_barres: 10,\n      Largeur_barres: undefined,\n      tab_zones: undefined,\n      AxeX: undefined,\n      AxeY: undefined,\n      svg: undefined,\n      temp_ok: undefined,\n      temp_pas_ok: undefined,\n      // line: '',\n    }),\n  mounted() {\n    this.nb_zones = this.data.length;\n    this.Largeur_graphe = this.nb_zones*100 + this.margeX;\n    this.Hauteur_graphe = d3.max(this.temp_seuils) + 100;\n    // console.log(\"a\");\n    this.Largeur_barres = this.Largeur_graphe/this.nb_zones;\n    this.tab_zones = this.creer_tab_zones();\n    this.createGraph();\n    this.timer = setInterval(this.changeData, 1000);\n  },\n  destroyed: function(){\n    clearInterval(this.timer);\n  },\n  watch:{\n    data: function(){\n      // console.log('a');\n      // this.createGraph();\n    },\n  },\n  methods: {\n    changeData(){\n      // console.log(\"ok\");\n      // for (let i = 0; i<this.data.length; i++){\n      //   this.data[i] = Math.floor((Math.random() * 100) + 100);\n      // }\n      let data_to_send = {\"type\": \"get\"};\n      let headers = {'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'POST, GET, PUT, OPTIONS, DELETE',\n            'Access-Control-Allow-Headers': 'Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type',\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n}\n\n      fetch(\"http://localhost:3000/temperature\", {\n        method: 'post',\n        headers,\n        body: JSON.stringify(data_to_send)\n\n      })\n      .then(res=> res.json())\n      .then(data => {\n        console.log(JSON.stringify(data));\n      });\n\n\n    },\n    creer_tab_zones(){\n      var tab = [];\n      for(var i = 1; i <= this.nb_zones; i++){\n        tab.push(\"zone \" + i);\n      }\n      return tab;\n    },\n    createGraph(){\n      var svg = this.svg;\n      var Largeur_barres = this.Largeur_barres;\n      var Largeur_graphe = this.Largeur_graphe;\n      var margeX = this.margeX;\n      var Hauteur_graphe = this.Hauteur_graphe;\n      var margeY = this.margeY;\n      var AxeX = this.AxeX;\n      var AxeY = this.AxeY;\n      var Espacement_barres = this.Espacement_barres;\n\n      AxeY = d3.scaleLinear()\n      .domain([Hauteur_graphe,0])\n      .range([0,Hauteur_graphe]);\n\n\n      AxeX = d3.scaleBand()\n          .domain(this.tab_zones)\n          .range([0,Largeur_graphe]);\n      svg = d3.select('svg')\n          .attr(\"width\", Largeur_graphe+margeX)\n          .attr(\"height\", Hauteur_graphe);\n      this.temp_ok = this.temp_bleues();\n      this.temp_pas_ok = this.temp_rouges();\n      svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\"+margeX+\",\"+ -margeY +\")\")\n      .call(d3.axisLeft(AxeY));\n\n      svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\"+ margeX +\",\"+(Hauteur_graphe-margeY)+\")\")\n      .call(d3.axisBottom(AxeX));\n\n      svg.selectAll(\"rect\")\n          .data(this.temp_pas_ok)\n          .enter()\n          .append(\"rect\")\n          .attr(\"fill\", \"red\")\n          .attr(\"y\", function(d) {\n               return Hauteur_graphe - d;\n          })\n          .attr(\"x\", function() {\n              return Espacement_barres;\n          })\n          .attr(\"height\", function(d) {\n              return d;\n          })\n          .attr(\"width\", Largeur_barres - Espacement_barres)\n          .attr(\"transform\", function (d, i) {\n              var translate = [(Largeur_barres * i) + margeX, -margeY];\n              return \"translate(\"+ translate +\")\";\n          });\n      // console.log(this.temp_ok);\n\n      svg.selectAll(\"graphe_rouge\")\n        .data(this.temp_ok)\n        .enter()\n        .append(\"rect\")\n        .attr(\"fill\", \"steelblue\")\n        .attr(\"y\", function(d) {\n             return Hauteur_graphe - d;\n        })\n        .attr(\"x\", function() {\n            return Espacement_barres;\n        })\n        .attr(\"height\", function(d) {\n            return d;\n        })\n        .attr(\"width\", Largeur_barres - Espacement_barres)\n        .attr(\"transform\", function (d, i) {\n            var translate = [(Largeur_barres * i) + margeX, -margeY];\n            return \"translate(\"+ translate +\")\";\n      });\n    },\n    temp_bleues(){\n    var tab = [];\n    for(var i = 0; i < this.nb_zones; i++){\n        if(this.data[i] <= this.temp_seuils[i]){\n            tab.push(this.data[i]);\n        }\n        else{\n            tab.push(this.temp_seuils[i]);\n        }\n    }\n    return tab;\n    },\n    temp_rouges(){\n      var tab = [];\n      for(var i = 0; i < this.nb_zones; i++){\n          if(this.data[i] > this.temp_seuils[i]){\n              tab.push(this.data[i]);\n          }\n          else{\n              tab.push(0);\n          }\n      }\n      return tab;\n    },\n  },\n};\n</script>\n\n<style scoped>\n  svg{\n    margin: 25px;\n  }\n  path{\n    fill: none;\n    stroke: #76BF8A;\n    stroke-width: 3px;\n  }\n</style>\n"],"sourceRoot":"src/components"}]}