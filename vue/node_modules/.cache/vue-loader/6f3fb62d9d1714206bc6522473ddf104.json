{"remainingRequest":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/romain/Bureau/Projet/2/Thermoformeuse/vue/src/components/Graphe.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/src/components/Graphe.vue","mtime":1584438706597},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/cache-loader/dist/cjs.js","mtime":1583847125793},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/babel-loader/lib/index.js","mtime":1583847125770},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/vuetify-loader/lib/loader.js","mtime":1583847126586},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/cache-loader/dist/cjs.js","mtime":1583847125793},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/vue-loader/lib/index.js","mtime":1583847126556}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Graphe.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Graphe.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <svg id=\"histogramme_temp\">\n  </svg>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nexport default {\n  name: 'vue-line-chart',\n  data: () => ({\n      data: undefined,\n      timer: undefined,\n      nb_zones: undefined,\n      temp_seuils: undefined,\n      margeX: 30,\n      margeY: 20,\n      Largeur_graphe: undefined,\n      Hauteur_graphe: undefined,\n      Espacement_barres: 10,\n      Largeur_barres: undefined,\n      tab_zones: undefined,\n    }),\n  mounted() {\n    this.get_config();\n  },\n  destroyed: function(){\n    clearInterval(this.timer);\n  },\n  watch:{\n    data: function(){\n      // this.createGraph();\n      this.update();\n    },\n    tab_zones: function(){\n      this.get_temp_seuil();\n    },\n    temp_seuils: function(){\n      this.Largeur_graphe = this.nb_zones*100 + this.margeX;\n      this.Hauteur_graphe = d3.max(this.temp_seuils) + 100;\n      this.Largeur_barres = this.Largeur_graphe/this.nb_zones;\n      this.changeData();\n      this.timer = setInterval(this.changeData, 1000);\n    }\n  },\n  methods: {\n    get_temp_seuil(){\n      let data_to_send = [\"get_configuration_courante\"];\n      let headers = {'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'POST, GET, PUT, OPTIONS, DELETE',\n            'Access-Control-Allow-Headers': 'Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type',\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n      fetch(\"http://localhost:3000\", {\n        method: 'post',\n        headers,\n        body: JSON.stringify(data_to_send)\n      })\n      .then(res=> res.json())\n      .then(data => {\n        if(data[1] === null){\n          this.temp_seuils = new Array(this.nb_zones);\n          for(let i=0; i<this.nb_zones; i++){\n            this.temp_seuils[i] = 100;\n          }\n        }\n        else{\n          console.log(data[1]);\n          this.temp_seuils = new Array(this.nb_zones);\n          for (let i=0; i<this.nb_zones; i++){\n            this.temp_seuils[i] = data[1][this.tab_zones[i]];\n          }\n        }\n      });\n    },\n    get_config(){\n      let data_to_send = [\"get_specifications_thermo\"];\n      let headers = {'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'POST, GET, PUT, OPTIONS, DELETE',\n            'Access-Control-Allow-Headers': 'Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type',\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n      fetch(\"http://localhost:3000\", {\n        method: 'post',\n        headers,\n        body: JSON.stringify(data_to_send)\n      })\n      .then(res=> res.json())\n      .then(data => {\n        this.nb_zones = data[1].nb_zones;\n        this.tab_zones = data[1].nom_zone_chauffe;\n      });\n    },\n    changeData(){\n\n      let data_to_send = [\"get_temperature\"];\n      let headers = {'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'POST, GET, PUT, OPTIONS, DELETE',\n            'Access-Control-Allow-Headers': 'Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type',\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n      fetch(\"http://localhost:3000\", {\n        method: 'post',\n        headers,\n        body: JSON.stringify(data_to_send)\n      })\n      .then(res=> res.json())\n      .then(data => {\n        this.data = data[1].zone_chauffe;\n      });\n    },\n    dessiner_histogramme(){\n      var nb_zones = this.data.length;\n      var margeX = this.margeX;\n      var margeY = this.margeY;\n      var Largeur_graphe = nb_zones*this.Largeur_barres + margeX;\n      var Hauteur_graphe = d3.max(this.temp_seuils)*1.5 + margeY;\n      var Espacement_barres = this.Espacement_barres;\n      var Largeur_barres = (Largeur_graphe / nb_zones);\n\n      var tab_zones = this.tab_zones;\n\n      var AxeY = d3.scaleLinear()\n          .domain([Hauteur_graphe,0])\n          .range([0,Hauteur_graphe])\n\n      var AxeX = d3.scaleBand()\n          .domain(tab_zones)\n          .range([0,Largeur_graphe])\n\n      var svg = d3.select('#histogramme_temp')\n          .attr(\"width\", Largeur_graphe+margeX)\n          .attr(\"height\", Hauteur_graphe);\n\n      var temp_ok = this.temp_bleues();\n      var temp_pas_ok = this.temp_rouges();\n\n      svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\"+margeX+\",\"+ -margeY +\")\")\n      .call(d3.axisLeft(AxeY));\n\n      svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\"+ margeX +\",\"+(Hauteur_graphe-margeY)+\")\")\n      .call(d3.axisBottom(AxeX));\n\n\n      svg.selectAll(\"graphe_rouge\")\n                  .data(temp_pas_ok)\n                  .enter()\n                  .append(\"rect\")\n                  .attr(\"fill\", \"red\")\n                  .attr(\"y\", function(d) {\n                      return Hauteur_graphe - d;\n                  })\n                  .attr(\"x\", function() {\n                      return Espacement_barres;\n                  })\n                  .attr(\"height\", function(d) {\n                      return d;\n                  })\n                  .attr(\"width\", Largeur_barres - Espacement_barres)\n                  .attr(\"transform\", function (d, i) {\n                      var translate = [(Largeur_barres * i) + margeX, -margeY];\n                      return \"translate(\"+ translate +\")\";\n                  });\n\n      svg.selectAll(\"graphe_bleu\")\n                  .data(temp_ok)\n                  .enter()\n                  .append(\"rect\")\n                  .attr(\"fill\", \"steelblue\")\n                  .attr(\"y\", function(d) {\n                      return Hauteur_graphe - d;\n                  })\n                  .attr(\"x\", function() {\n                      return Espacement_barres;\n                  })\n                  .attr(\"height\", function(d) {\n                      return d;\n                  })\n                  .attr(\"width\", Largeur_barres - Espacement_barres)\n                  .attr(\"transform\", function (d, i) {\n                      var translate = [(Largeur_barres * i) + margeX, -margeY];\n                      return \"translate(\"+ translate +\")\";\n                  });\n\n    },\n    temp_bleues(){\n    var tab = [];\n    for(var i = 0; i < this.nb_zones; i++){\n        if(this.data[i] <= this.temp_seuils[i]){\n            tab.push(this.data[i]);\n        }\n        else{\n            tab.push(this.temp_seuils[i]);\n        }\n    }\n    return tab;\n    },\n    temp_rouges(){\n      var tab = [];\n      for(var i = 0; i < this.nb_zones; i++){\n          if(this.data[i] > this.temp_seuils[i]){\n              tab.push(this.data[i]);\n          }\n          else{\n              tab.push(0);\n          }\n      }\n      return tab;\n    },\n    update(){\n      var svg = d3.select(\"svg\");\n      svg.selectAll(\"*\").remove();\n      this.dessiner_histogramme();\n    }\n  },\n};\n</script>\n\n<style scoped>\n  svg{\n    margin: 25px;\n  }\n  path{\n    fill: none;\n    stroke: #76BF8A;\n    stroke-width: 3px;\n  }\n</style>\n"]}]}