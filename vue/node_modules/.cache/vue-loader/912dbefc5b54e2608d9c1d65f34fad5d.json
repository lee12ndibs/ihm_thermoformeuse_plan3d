{"remainingRequest":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/romain/Bureau/Projet/2/Thermoformeuse/vue/src/components/Main.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/src/components/Main.vue","mtime":1584316335684},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/css-loader/dist/cjs.js","mtime":1583847125900},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1583847126556},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/postcss-loader/src/index.js","mtime":1583847126230},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/vuetify-loader/lib/loader.js","mtime":1583847126586},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/cache-loader/dist/cjs.js","mtime":1583847125793},{"path":"/home/romain/Bureau/Projet/2/Thermoformeuse/vue/node_modules/vue-loader/lib/index.js","mtime":1583847126556}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKdi1pbWd7CiAgcGFkZGluZy10b3A6IDIwcHg7Cn0K"},{"version":3,"sources":["Main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgJA;AACA;AACA","file":"Main.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container text-center>\n    <v-row>\n      <v-col cols=\"3\">\n      </v-col>\n      <v-col cols=\"6\">\n        <v-card outlined>\n          <h1>{{configuration}}</h1>\n        </v-card>\n      </v-col>\n      <v-col cols=\"3\">\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col cols=\"1\">\n      </v-col>\n      <v-col cols=\"6\">\n        <Graphe/>\n      </v-col>\n      <v-col cols=\"2\">\n      </v-col>\n      <v-col cols=\"3\">\n        <v-btn dark x-large fab right color=\"green\" @click=\"start()\">\n          <v-img v-if=\"statut==='Prêt'\" class=\"start\"\n            :src=\"require('../assets/start.jpg')\"\n            contain\n            height=\"300\"\n          />\n          <v-img v-else class=\"start\"\n            :src=\"require('../assets/start_inactive.jpg')\"\n            contain\n            height=\"300\"\n          />\n        </v-btn>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col cols=\"1\">\n      </v-col>\n      <v-col cols=\"6\">\n        <v-card v-if=\"statut === 'Prêt'\" outlined color=green>\n          <h1>{{statut}}</h1>\n        </v-card>\n        <v-card v-else-if=\"statut === 'En cours'\" outlined color=orange>\n          <h1>{{statut}}</h1>\n        </v-card>\n        <v-card v-else outlined color=red>\n          <h1>{{statut}}</h1>\n        </v-card>\n      </v-col>\n      <v-col cols=\"3\">\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\n  import Graphe from './Graphe.vue'\n  export default {\n    name: 'Main',\n    components: {\n      Graphe,\n    },\n    data: () => ({\n      timer: undefined,\n      statut: \"Arrêt\",\n      configuration: \"Aucune\",\n    }\n    ),\n    mounted() {\n      this.timer = setInterval(this.get_statut, 1000);\n      this.get_configuration();\n    },\n    destroyed: function(){\n      clearInterval(this.timer);\n    },\n    methods:{\n      start(){\n        let data_to_send = [\"start\"];\n        let headers = {'Access-Control-Allow-Origin': '*',\n              'Access-Control-Allow-Methods': 'POST, GET, PUT, OPTIONS, DELETE',\n              'Access-Control-Allow-Headers': 'Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type',\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n        fetch(\"http://localhost:3000\", {\n          method: 'post',\n          headers,\n          body: JSON.stringify(data_to_send)\n\n        })\n        .then(res=> res.json())\n        .then(data => {\n          console.log(JSON.stringify(data));\n\n        });\n      },\n      get_statut(){\n        let data_to_send = [\"get_statut\"];\n        let headers = {'Access-Control-Allow-Origin': '*',\n              'Access-Control-Allow-Methods': 'POST, GET, PUT, OPTIONS, DELETE',\n              'Access-Control-Allow-Headers': 'Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type',\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n        fetch(\"http://localhost:3000\", {\n          method: 'post',\n          headers,\n          body: JSON.stringify(data_to_send)\n        })\n        .then(res=> res.json())\n        .then(data => {\n          // console.log(JSON.stringify(data));\n          if(data[1].statut == 1)\n            this.statut = \"En cours\";\n          else\n            this.statut = \"Prêt\";\n          // console.log(this.statut);\n        });\n      },\n      get_configuration(){\n        let data_to_send = [\"get_configuration\"];\n        let headers = {'Access-Control-Allow-Origin': '*',\n              'Access-Control-Allow-Methods': 'POST, GET, PUT, OPTIONS, DELETE',\n              'Access-Control-Allow-Headers': 'Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type',\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n        fetch(\"http://localhost:3000\", {\n          method: 'post',\n          headers,\n          body: JSON.stringify(data_to_send)\n        })\n        .then(res=> res.json())\n        .then(data => {\n          console.log(JSON.stringify(data));\n          this.configuration = data[1].name;\n          console.log(this.statut);\n        });\n      }\n    }\n  }\n</script>\n<style>\nv-img{\n  padding-top: 20px;\n}\n</style>\n"]}]}